git config --global user.name

git config --list

git config --global.editor "notepad++ path"


git init

git add "filename" "filename2" "filename3"

git add *.java

git add .


git status
 
git status -s

git commit -m "msg"

git status -help

git --help

git commit -a -m "new commit msgs" //to stage and commit in single 

git ignoring---

.gitingore

git rm --cached "filename" //it will remove file from the git but let it be in local machine.. it is useful when you mistakenly commit changes and then realize you dont have to track now onwards. .classpath 

for tracked directory remove from git 

git rm -r --cached "directoryName"

git rm -r --cached bin/

touch .gitingore

nano .gitingore

git log  ---commited logs

git log --pretty=oneline


Git undoing
amend last commit

git commit --amend

git commit --amend --no-edit

vi 

insert i 

:wq -- w = write q = quit


git unstage file 

git restore --staged filename 

for filename press tab.. it will autocomplete

how to revert changes...

git restore filename

git hoisting
Git remote repo..

To check if local repo is connected with any other remote repo or notepad
git remote -v

push local to remote 

git remote add origin  'remote url link..remove comas too.'

git push origin -u master  //-u means up stream.


Clone repo :::
git clone git-repo-url


SSH connection in github ::: secure socket 

generate SSH key

open git GUI -> help -> generate SSH key. -> without entering password click ok -> click ok -> there you are, got the new key.

on github -> setting-> ssh and gpg keys -> add new -> add title -> paste git GUI generated key..-> add password.

after adding SSH key ..
go to repo -> code -> click SSH -> copy link.


to change git remote url...

git remote set-url git-url-link-with-ssh

git remote -v
git commit -a -m "test check"
git push origin master //alreay set -u, then no need to write everytime whole command, instead of it -- git push will work..

when ip change, at that time it will shows.
known_hosts in .ssh foler - where all the host saved..

To check commit changes on git hub -> go to repo -> commit -> click on it.

Branches




 







git config --global user.name

git config --list

git config --global.editor "notepad++ path"


git init

git add "filename" "filename2" "filename3"

git add *.java

git add .


git status
 
git status -s

git commit -m "msg"

git status -help

git --help

git commit -a -m "new commit msgs" //to stage and commit in single 

git ignoring---

.gitingore

git rm --cached "filename" //it will remove file from the git but let it be in local machine.. it is useful when you mistakenly commit changes and then realize you dont have to track now onwards. .classpath 

for tracked directory remove from git 

git rm -r --cached "directoryName"

git rm -r --cached bin/

touch .gitingore

nano .gitingore

git log  ---commited logs

git log --pretty=oneline


Git undoing
amend last commit

git commit --amend

git commit --amend --no-edit

vi 

insert i 

:wq -- w = write q = quit


git unstage file 

git restore --staged filename 

for filename press tab.. it will autocomplete

how to revert changes...

git restore filename

git hoisting
Git remote repo..

To check if local repo is connected with any other remote repo or notepad
git remote -v

push local to remote 

git remote add origin  'remote url link..remove comas too.'

git push origin -u master  //-u means up stream.


Clone repo :::
git clone git-repo-url


SSH connection in github ::: secure socket 

generate SSH key

open git GUI -> help -> generate SSH key. -> without entering password click ok -> click ok -> there you are, got the new key.

on github -> setting-> ssh and gpg keys -> add new -> add title -> paste git GUI generated key..-> add password.

after adding SSH key ..
go to repo -> code -> click SSH -> copy link.


to change git remote url...

git remote set-url git-url-link-with-ssh

git remote -v
git commit -a -m "test check"
git push origin master //alreay set -u, then no need to write everytime whole command, instead of it -- git push will work..

when ip change, at that time it will shows.
known_hosts in .ssh foler - where all the host saved..

To check commit changes on git hub -> go to repo -> commit -> click on it.

Branches

different ways 

- git branch TA0001
- git branch //to check branches -- nd active branch with * before it.

- git branch -r  //it will show you branch on remote
- git branch -a  // to check all the branch (remote+local)

developers mostly use following command for branches

git checkout -b branch_name

add your impl and commit on branch 
git add . 
git commit -m "msg"

check git log on branch 

git log -2 // last two commit 
git log --all // to check all the logs - as git only shows log for current directory
git log  branch_name // to check branch specific logs

// change again to master
after checkout master  

git checkout master
  
check all files.. it will show you last commited file, not branch changes.

navigate beween branches ;
git checkout brnach_name

navigate between commits  :
git log -3 
git checkout commit_id (enter 5 number ) --//2676925361988b7cbe70c21f4166fb85afe86ae8 - here 26769 -- git checkout 26769

-- do not commit anything at commit navigation

after that return to the newly created branch --- 
git checkout brnach_name

and push to remote 
git push origin -u (branch_name ..remove bracket also) //branch name -- TA0001_branch_impl

check on github web ... you can check new branch with all new commits.

click on insight -> network -> it shows all commit history , even show how many commit ahead new branch..

To remove branch 

git branch -b branch_name

for remote branch needs to remove or delete at that time 
git push origin --delete branch_name

to switch to master branch :
git switch master  --- same as git checkout

git switch -c new_branch // here -c for the create 


To switch previous branch
git switch -


PULL request (term used in github and bitbucket)

Go to github -> pull request -> new pull request -> [check base <- compare (in base where all changes needed to merge) compare - newly branch from which changes needed to add in main ]

change compare option to newly branch.. and you can check all the difference

after check changes -> create a pull request -> write (add descritpion as per requirement) -> create a pull request button

check all the commit -> commits , file changed -> check review changes

go to pull request -> click on request -> assignee -> add your self 


most of use rebase and merge - newly comit added on top of it.
To change merge option (Pull Requests) ->  disable what you dont needed 

got ot pull request -> rebase and merge -> confirm rebase and merge...
Pull request successfully merged and closed
You’re all set—the TA0001_branch_impl branch can be safely deleted. and -> press Delete branch


Go to repo-> check branch -> branch was deleted  -> check commits from right corner

To give access of your repo to others...
settings -> manage access (collaboration) -> add collaborator -> it will send the invitation link to other user.

(fetch, merge, pull)

git fetch  --
it will fetch all the changes from the remote branch and put it in local repo .. it only check but do not merge .. after fetch you can merge whever you want.


after that you have to merge
git merge 

fast forward - rebase


git pull (it is combination for the fetch and merge)

merge request (term used in gitLab)